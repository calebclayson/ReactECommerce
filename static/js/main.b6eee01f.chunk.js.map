{"version":3,"sources":["components/product.js","components/products.js","components/cartItem.js","components/cart.js","components/login.js","components/productDetail.js","components/current.js","App.js","serviceWorker.js","reducers/index.js","reducers/reducer-products.js","index.js"],"names":["Product","props","react_default","a","createElement","react_router_dom","className","to","product","id","key","title","src","img","alt","price","Products","state","currentCategory","filterProducts","e","_this","setState","target","value","_this2","this","products","map","components_product","i","length","category","categories","onChange","createCategoryOptions","createProductDiv","Component","connect","ProductReducer","CartItem","inputVal","quantity","handleChange","Number","onClick","delete","type","passID","dispatch","num","cart","Cart","cartItem","findCartItems","confirm","Login","username","password","handleChange2","updateUser","name","user","in","val","description","Current","match","params","productID","productDetail","getCurrentItem","App","fetch","then","rsp","json","allItems","addProducts","addCategories","createUserDiv","react_router","path","exact","component","Boolean","window","location","hostname","allReducers","combineReducers","arguments","undefined","action","Object","toConsumableArray","concat","newCart","newCart2","splice","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6eee01f.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/product.css';\nimport { Link } from 'react-router-dom';\n\nconst Product = props => (\n    <Link className=\"itemLink\" to={\"/\"+props.product.id}>\n    <div className=\"product\" key={props.product.id}>\n        <div className=\"title\">{props.product.title}</div>\n        <img src={props.product.img} alt={props.product.title} />\n        <b><div className=\"price\">{props.product.price}</div></b>\n    </div>\n    </Link>\n);\n\nexport default Product;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Product from './product';\nimport '../css/products.css';\n\nclass Products extends Component {\n    state={currentCategory:''}\n\n    createProductDiv() {\n        return this.props.products.map(product => {\n            if(this.state.currentCategory === '') {\n                return (\n                    <Product key={product.id} product={product} />\n                );\n            } else {\n                for(let i = 0; i < this.props.products.length; i++) {\n                    if(product.category === this.state.currentCategory) {\n                        return (\n                            <Product key={product.id} product={product} />\n                        )\n                    }\n                }\n            }\n            return null;\n        })\n    }\n\n    createCategoryOptions() {\n        return this.props.categories.map(category => {\n            return (\n                <option key={category} value={category}>{category}</option>\n            );\n        })\n    }\n\n    filterProducts = e => {\n        this.setState({currentCategory:e.target.value})\n    }\n\n    render() { \n        return (\n            <div className=\"container\">\n                <select key=\"0\" onChange={this.filterProducts}>\n                    {this.createCategoryOptions()}\n                </select>\n                {this.createProductDiv()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      products: state.ProductReducer.products,\n      categories: state.ProductReducer.categories\n    };\n}\n\nexport default connect(mapStateToProps)(Products);","import React, { Component } from 'react';\nimport '../css/current.css';\nimport { connect } from 'react-redux';\n\nclass CartItem extends Component {\n    state={inputVal:this.props.quantity}\n\n    render() {\n        return (\n            <div className=\"product\" key={this.props.product.id}>\n                <div className=\"title\">{this.props.product.title}</div>\n                <img className=\"img\" src={this.props.product.img} alt={this.props.product.title} />\n                <b><div className=\"price\">{this.props.product.price}</div></b>\n                <b><div>Quantity: {this.props.quantity}</div></b>\n                <div className=\"addCart\">\n                    <button onClick={() => this.props.delete(this.props.product.id)}>Delete</button>\n                    <input type=\"number\" value={this.state.inputVal} onChange={this.handleChange} />\n                    <button onClick={() => this.props.passID(this.props.product.id, this.state.inputVal)}>Save</button>\n                </div>\n            </div>\n        );\n    }\n\n    handleChange = (e) => {\n        this.setState({inputVal: Number(e.target.value)});\n    }\n}\n\nfunction checkQuantity(num) {\n    if(num <= 0) {\n        return Number(1);\n    } else {\n        return Number(num);\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        passID: (id, quantity) => {\n            dispatch({\n                type: 'UPDATE_CART',\n                cart: {\n                    id: id,\n                    quantity: checkQuantity(quantity)\n                }\n            })\n        },\n        delete: (id) => {\n            dispatch({\n                type: 'DELETE_CART_ITEM',\n                id: id\n            })\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CartItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CartItem from './cartItem';\n\nclass Cart extends Component {\n    findCartItems() {\n        return this.props.products.map(product => {\n            for(let i = 0; i < this.props.cart.length; i++) {\n                if(product.id === this.props.cart[i].id) {\n                    return <CartItem key={product.id} product={product} quantity={this.props.cart[i].quantity}/>\n                }\n            }\n            return null;\n        });\n    }\n    \n    render() { \n        return (\n            <div>\n            <div className=\"container\">\n                {this.props.cart.length > 0 ? this.findCartItems() : <div className=\"no-items\">No Items in Cart</div>}\n            </div>\n            <button className=\"confirm-button\" onClick={() => this.props.confirm()}>Confirm Purchases</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      products: state.ProductReducer.products,\n      cart: state.ProductReducer.cart\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        confirm: () => {\n            dispatch({\n                type: 'WIPE_CART'\n            })\n        }\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n    state = { username:'',password:'' }\n\n    handleChange = (e) => {\n        this.setState({ username: e.target.value,password: this.state.password });\n    }\n\n    handleChange2 = (e) => {\n        this.setState({ username: this.state.username,password:e.target.value});\n    }\n\n    render() { \n        return ( \n            <div className=\"wrapper\">\n                <h1>Login</h1>\n                <div><span>Name: </span><input type=\"text\" onChange={this.handleChange} /></div>\n                <div><span>Password: </span><input type=\"text\" onChange={this.handleChange2} /></div>\n                <Link to=\"/\"><button onClick={() => this.props.updateUser(this.state.username,this.state.password)}>Submit</button></Link>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateUser: (name, password) => {\n            dispatch({\n                type: 'UPDATE_USER',\n                user: {\n                    name: name,\n                    password: password,\n                    in: true\n                }\n            })\n        }\n    }\n}\n \nexport default connect(null, mapDispatchToProps)(Login);","import React from 'react';\nimport '../css/current.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet inputVal = '';\n\nconst ProductDetail = props => (\n    <div className=\"detail-product\" key={props.product.id}>\n        <div className=\"title\">{props.product.title}</div>\n        <img className=\"detail-img\" src={props.product.img} alt={props.product.title} />\n        <div className=\"description\">{props.product.description}</div>\n        <b><div className=\"detail-price\">{props.product.price}</div></b>\n        <div className=\"addCart\">\n            <Link to=\"/\"><button>Cancel</button></Link>\n            <input type=\"number\" onChange={handleChange}/>\n            <Link to=\"/\"><button onClick={() => props.passID(props.product.id, inputVal)}>Add To Cart</button></Link>\n        </div>\n    </div>\n);\n\nfunction handleChange(val) {\n    inputVal = val.target.value;\n}\n\nfunction noZero(num) {\n    if(Number(num) <= 0) {\n        return Number(1);\n    } else {\n        return Number(num);\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      passID: (id, quantity) => {\n        dispatch({\n            type: 'ADD_TO_CART',\n            cart: {\n                id: id,\n                quantity: noZero(quantity)\n            }\n        })\n        inputVal = '';\n      }\n    }\n  }\n\nexport default connect(null, mapDispatchToProps)(ProductDetail);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProductDetail from './productDetail';\n\nclass Current extends Component {\n    getCurrentItem() {\n        return this.props.products.map(product => {\n            if(Number(product.id) === Number(this.props.match.params.productID)) {\n                return <ProductDetail key={product.id} product={product}/>;\n            } else {\n                return null;\n            }\n        })\n    };\n    \n    render() { \n        return ( \n        <div>\n            {this.getCurrentItem()}\n        </div> \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.ProductReducer.products\n    }\n}\n \nexport default connect(mapStateToProps)(Current);","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Products from './components/products';\nimport Cart from './components/cart';\nimport Login from './components/login';\nimport Current from './components/current';\n\nclass App extends Component {\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/tdmichaelis/json-api/products')\n      .then(rsp => rsp.json())\n      .then(allItems => {\n        this.props.addProducts(allItems);\n      });\n    fetch('https://my-json-server.typicode.com/tdmichaelis/typicode/categories')\n      .then(rsp => rsp.json())\n      .then(allItems => {\n        this.props.addCategories(allItems);\n      });\n  }\n\n  createUserDiv() {\n    return <div className=\"white-text\">{this.props.user.name}</div>;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"header\">\n          <div className=\"left\">\n            <Link className=\"link\" to=\"/\">\n              Products\n            </Link>\n            <Link className=\"link\" to=\"/cart\">\n              Cart\n            </Link>\n          </div>\n          <div className=\"right\">\n            {\n              this.props.user.in ?\n              this.createUserDiv()\n              : <Link className=\"link\" to=\"/login\">\n              Login\n            </Link>\n            }   \n          </div>\n        </div>\n        <Route path=\"/\" exact component={Products} />\n        <Route path=\"/cart\" component={Cart} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/:productID\" component={Current} />\n      </Router>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProducts: products => {\n      dispatch({\n        type: 'ADD_PRODUCTS',\n        products\n      })\n    },\n    addCategories: categories => {\n      dispatch({\n        type: 'ADD_CATEGORIES',\n        categories\n      })\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.ProductReducer.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport ProductReducer from './reducer-products';\n\nconst allReducers = combineReducers({\n    ProductReducer\n});\n\nexport default allReducers;","export default function (state = { categories: [''], products: [], cart: [], user: { name: '', password:'', in: false } }, action) {\n  switch (action.type) {\n    case \"ADD_PRODUCTS\":\n      return {\n        categories: [\n          ...state.categories\n        ],\n        products: [\n          ...state.products,\n          ...action.products\n        ],\n        cart: [\n          ...state.cart\n        ],\n        user: state.user\n      }\n    case \"ADD_TO_CART\":\n      return {\n        categories: [\n          ...state.categories\n        ],\n        products: [\n          ...state.products\n        ],\n        cart: [\n          ...state.cart,\n          action.cart\n        ],\n        user: state.user\n      }\n    case \"UPDATE_CART\":\n      let newCart = [...state.cart];\n      for (let i = 0; i < newCart.length; i++) {\n        if (Number(action.cart.id) === Number(newCart[i].id)) {\n          newCart[i].quantity = action.cart.quantity;\n        }\n      }\n      return {\n        categories: [\n          ...state.categories\n        ],\n        products: [\n          ...state.products\n        ],\n        cart: newCart,\n        user: state.user\n      }\n    case \"DELETE_CART_ITEM\":\n      let newCart2 = [...state.cart];\n      for (let i = 0; i < newCart2.length; i++) {\n        if (Number(action.id) === Number(newCart2[i].id)) {\n          newCart2.splice(i, 1);\n        }\n      }\n      return {\n        categories: [\n          ...state.categories\n        ],\n        products: [\n          ...state.products\n        ],\n        cart: newCart2,\n        user: state.user\n      }\n    case \"ADD_CATEGORIES\":\n      return {\n        categories: [\n          ...state.categories,\n          ...action.categories\n        ],\n        products: [\n          ...state.products\n        ],\n        cart: [\n          ...state.cart\n        ],\n        user: state.user\n      }\n    case \"UPDATE_USER\":\n      return {\n        categories: [\n          ...state.categories\n        ],\n        products: [\n          ...state.products\n        ],\n        cart: [\n          ...state.cart\n        ],\n        user: action.user\n      }\n    case \"WIPE_CART\":\n      return {\n        categories: [\n          ...state.categories\n        ],\n        products: [\n          ...state.products\n        ],\n        cart: [],\n        user: state.user\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>\n        , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}